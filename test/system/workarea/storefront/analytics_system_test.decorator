require 'test_helper'

module Workarea
  decorate Storefront::AnalyticsSystemTest, with: :one_theme do
    def test_announcing_category_view_event
      visit storefront.category_path(@category)

      click_button 'Filter Results'
      page.find('a', text: 'Green (1)').click
      sleep 1

      events = find_analytics_events(for_event: 'categoryView')

      assert_equal(1, events.count)
      payload = events.first['arguments'].first

      assert_equal('Test Category', payload['name'])
      assert_equal('featured', payload['sort'])
      assert_equal(1, payload['page'])
      assert_equal(['Green'], payload['filters']['color'])
      assert_page_view
    end

    def test_announcing_search_results_view_event
      visit storefront.search_path(q: 'test')
      wait_for_xhr

      events = find_analytics_events(for_event: 'searchResultsView')
      assert_equal(1, events.count)
      payload = events.first['arguments'].first

      assert_equal('test', payload['terms'])
      assert_equal('relevance', payload['sort'])
      assert_equal(1, payload['page'])
      assert_equal({}, payload['filters'])
      assert_equal(2, payload['totalResults'])
      assert_page_view

      click_button 'Filter Results'
      click_link 'Green (1)'

      events = find_analytics_events(for_event: 'searchResultsView')
      assert_equal(1, events.count)
      payload = events.first['arguments'].first

      assert_equal(['Green'], payload['filters']['color'])
      assert_equal(1, payload['totalResults'])
      assert_page_view
    end
  end
end
